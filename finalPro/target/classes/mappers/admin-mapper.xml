<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "mybatis-3-mapper.dtd" >
<mapper namespace="adminMapper">
	<!-- 대시보드쪽 새로운 멤버관련 -->
	<select id="selectNewMember" resultMap="memberMapper.memberResult">
		select *
		from member
		where to_char(mem_cdate, 'yyyymmdd')=to_char(sysdate, 'yyyymmdd') and mem_status='Y' and is_admin = 'N'
		order by mem_cdate desc
	</select>
	
	<select id="selectNewMemberCount" resultType="_int">
		select count(*)
		from member
		where to_char(mem_cdate, 'yyyymmdd')=to_char(sysdate, 'yyyymmdd') and mem_status='Y' and is_admin = 'N'
	</select>
	
	<select id="selectNewReview" resultMap="reviewMapper.resultReview">
		select rev_no, rev_title, l.lec_name, m.mem_nickname,  rev_date, rev_star
		from review
		    join lecture l using(lec_no)
		    join member m using(mem_no)
		where to_char(rev_date, 'yyyymmdd')=to_char(sysdate, 'yyyymmdd')
		order by rev_no desc
	</select>

	<select id="selectNewReviewCount" resultType="_int">
		select count(*)
		from review
		where to_char(rev_date, 'yyyymmdd')=to_char(sysdate, 'yyyymmdd')
	</select>
	

	<!-- lecture테이블 관리 -->
	<select id="selectLecture" resultMap="lectureMapper.lectureResult">
 		select lec_name
						, lec_sdate
						, lec_edate
						, lec_info
						, lec_stime
						, lec_etime
						, lec_count
						, lec_filename
						, lec_bcatg
						, lec_scatg
						, lec_price
						, lec_grade
						, lec_jnum
						, lec_cnum
						, tea_no
						, loc_no
 		from lecture
 		where lec_no=#{lecNo}
 	</select>
 	<delete id = "deleteLecture_ad">
		delete from lecture
		where lec_no = #{lecNo}
	</delete>
	<insert id="insertLecture" >
		insert into lecture(lec_no, lec_name, lec_sdate, lec_edate,
							 lec_info, lec_stime, lec_etime, lec_count, lec_filename,
							  lec_bcatg, lec_scatg, lec_price, lec_grade, lec_jnum, lec_cnum,
							  tea_no, loc_no)
			values((seq_lno.nextval), #{lecName}, #{lecSdate}, #{lecEdate}, 
			#{lecInfo}, #{lecStime}, #{lecEtime}, #{lecCount}, #{lecFilename}, 
			#{lecBcatg}, #{lecScatg}, #{lecPrice}, default, #{lecJnum}, #{lecCnum},
			#{teaNo}, #{locNo})
 	</insert>
 	<update id = "updateLecture">
		update lecture 
					  set lec_name = #{lecName}
						, lec_sdate = #{lecSdate}
						, lec_edate = #{lecEdate}
						, lec_info = #{lecInfo}
						, lec_stime = #{lecStime}
						, lec_etime = #{lecEtime}
						, lec_count = #{lecCount}
						, lec_filename = #{lecFilename}
						, lec_bcatg = #{lecBcatg}
						, lec_scatg = #{lecScatg}
						, lec_price = #{lecPrice}
						, lec_grade = default
						, lec_jnum = #{lecJnum}
						, lec_cnum = #{lecCnum}
						, tea_no = #{teaNo}
						, loc_no = #{locNo}
		where lec_no = #{lecNo}
	</update>
 
  	
  	<select id="selectLectureList" resultMap="lectureMapper.lectureResult">
		select l.lec_no, l.lec_name, t.tea_name, to_char(l.lec_sdate,'YYYY-MM-DD') as "lec_sdate", to_char(l.lec_edate,'YYYY-MM-DD') as "lec_edate", l.lec_stime, l.lec_etime, l.lec_count,
						 l.lec_bcatg, l.lec_scatg, l.lec_price, l.lec_grade, l.lec_cnum, ll.loc_name
			from lecture l
			join Teacher t on (l.tea_no = t.tea_no)
			join LectureLocation ll on (l.loc_no = ll.loc_no)
		order by lec_no desc
	</select>
	
	<select id="selectListCount_Lecture" resultType="_int">
		select count(*)
			from lecture
	</select>
	
	<select id="selectTeachers" resultMap="lectureMapper.Teacher">
		select tea_no, tea_name
		from teacher
		where tea_status = 'Y'
		order by tea_no
	</select>
	
	<select id="selectLocations" resultMap="lectureMapper.LectureLocation">
		select loc_no, loc_name
		from lecturelocation
		order by loc_no 
	</select>
	
	

	<!-- Teacher테이불 관리 -->
	<insert id="insertTeacher">
		insert into teacher (tea_no, tea_name, tea_age, tea_info, tea_edate)
		values((seq_tno.nextval), #{teaName}, #{teaAge}, #{teaInfo}, sysdate)
	</insert>
	
  	<select id="selectTeacherList" resultMap="lectureMapper.Teacher">
		select tea_no, tea_name, tea_age, TO_CHAR(tea_edate,'YY.MM.DD') as "tea_edate"
			from teacher
			where tea_status = 'Y'
		order by tea_no desc
	</select>
  
  	<select id="selectListCount_Teacher" resultType="_int">
		select count(*)
			from teacher
		where tea_status = 'Y'
	</select>
	<update id="deleteTeacher_ad">
		update teacher
		set tea_status='N'
		where tea_no = #{teaNo}
	</update>
	
	<!-- Member 테이블 관리 -->
	<select id="selectMemberList" resultMap="memberMapper.memberResult">
		select mem_no, mem_name, mem_id, mem_nickname, mem_gender, mem_birthday, TO_CHAR(mem_cdate,'YY.MM.DD') as "mem_cdate", mem_carno , mem_status
			from member
		where mem_status = 'Y' and is_admin = 'N'
		order by mem_no desc
	</select>
	<select id="selectListCount_Member" resultType="_int">
		select count(*)
			from member
		where mem_status = 'Y'
	</select>
	<update id="deleteMember_ad">
		update member
		set mem_status='N'
		where mem_no = #{memNo}
	</update>
	
	<!-- Hangout 테이블 관리 -->
	<select id="selectHangoutList" resultMap="meetingMapper.resultMeeting">
		select h.hangout_no, h.hangout_title, m.mem_nickname, h.hangout_joincount, h.hangout_nowcount, h.hangout_viewcount, TO_CHAR(h.hangout_edate,'YY.MM.DD') as "hangout_edate",h.hangout_status 
			from hangout h, member m 
			where h.mem_no = m.mem_no  and h.hangout_status = 'Y'
		order by h.hangout_no desc
	</select>
	<select id="selectListCount_Hangout" resultType="_int">
		select count(*)
			from hangout
		where hangout_status = 'Y'
	</select>
	<update id="deleteHangout_ad">
		update hangout
		set hangout_status='N'
		where hangout_no = #{hangoutNo}
	</update>
	
	<!-- Review 테이블 관리 -->
	<select id="selectReviewList" resultMap="reviewMapper.resultReview">
		select r.rev_no, r.rev_title, r.rev_catg, to_char(r.rev_date, 'YYYY-MM-DD') as rev_date, r.rev_star, r.rev_count, r.rev_rec, m.mem_nickname, l.lec_name
			from review r  
			join member m on(r.mem_no = m.mem_no) 
			join lecture l on(r.lec_no = l.lec_no) 
		order by r.rev_no desc
	</select>
	<select id="selectListCount_Review" resultType="_int">
		select count(*)
			from review
	</select>
	
	<delete id = "deleteReview_ad">
		delete from review
		where rev_no = #{revNo}
	</delete>
	
	<!-- Notice 테이블 관리 -->
	<select id="selectNoticeList" resultMap="noticeMapper.noticeResult">
		select n.notice_no, n.notice_catg, n.notice_title, to_char(n.notice_edate, 'YYYY-MM-DD') as notice_edate, m.mem_nickname 
			from notice n, member m 
			where n.mem_no = m.mem_no
		order by n.notice_no desc
	</select>
	<select id="selectListCount_Notice" resultType="_int">
		select count(*)
			from notice
	</select>
	<delete id = "deleteNotice_ad">
		delete from notice
		where notice_no = #{noticeNo}
	</delete>
	
	
	
	
	
	
</mapper>